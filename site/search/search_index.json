{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83e\udde0 AI / ML Learnings","text":"<p>Welcome to the AI &amp; Machine Learning Knowledge Base! This documentation is a curated collection of topics, notes, and experiments that I've gathered while exploring the world of Artificial Intelligence and Machine Learning.</p>"},{"location":"#objectives","title":"\ud83d\udccc Objectives","text":"<ul> <li>Track and organize everything I learn in AI/ML.</li> <li>Serve as a personal reference guide.</li> <li>Help others who are starting out in the field.</li> </ul>"},{"location":"#topics-covered","title":"\ud83d\uddc2\ufe0f Topics Covered","text":""},{"location":"#artificial-intelligence","title":"\ud83e\udd16 Artificial Intelligence","text":"<ul> <li>AI Fundamentals</li> <li>Agents and Environments</li> <li>Search Algorithms</li> <li>Expert Systems</li> </ul>"},{"location":"#machine-learning","title":"\ud83d\udcc8 Machine Learning","text":"<ul> <li>Supervised vs Unsupervised Learning</li> <li>Regression &amp; Classification</li> <li>Model Evaluation Metrics</li> <li>Real-world ML Use Cases</li> </ul>"},{"location":"#math-for-aiml","title":"\ud83e\uddee Math for AI/ML","text":"<ul> <li>Linear Algebra</li> <li>Probability &amp; Statistics</li> <li>Calculus (Basics)</li> <li>Optimization Techniques</li> </ul>"},{"location":"#projects-practice","title":"\ud83d\udcda Projects &amp; Practice","text":"<ul> <li>Jupyter Notebooks</li> <li>Hands-on Datasets</li> <li>End-to-End ML Pipelines</li> </ul>"},{"location":"#tools-frameworks","title":"\ud83d\ude80 Tools &amp; Frameworks","text":"<ul> <li>Python (NumPy, Pandas, Scikit-learn)</li> <li>TensorFlow / PyTorch</li> <li>Jupyter Lab / Notebook</li> <li>Google Colab</li> </ul>"},{"location":"#getting-started","title":"\ud83d\udca1 Getting Started","text":"<p>If you're new to AI/ML, start with:</p> <p>\ud83d\udc49 ML Basics \ud83d\udc49 ML Basics</p>"},{"location":"#how-this-site-was-built","title":"\ud83d\udee0\ufe0f How This Site Was Built","text":"<ul> <li>Built using MkDocs</li> <li>Themed with Material for MkDocs</li> <li>Content written in Markdown for simplicity and clarity</li> </ul>"},{"location":"#contributions-feedback","title":"\ud83d\udcec Contributions &amp; Feedback","text":"<p>This is a personal learning log, but feel free to suggest improvements or corrections on GitHub.</p> <p>\u201cThe best way to learn is to teach.\u201d \u2015 Frank Oppenheimer</p>"},{"location":"cheatsheet/","title":"Cheatsheet","text":""},{"location":"cheatsheet/#basic-configuration-mkdocsyml","title":"\ud83d\udd27 Basic Configuration (<code>mkdocs.yml</code>)","text":"<pre><code>site_name: My Project Docs\nsite_url: https://example.com\nsite_description: Documentation for my AI/ML learning\nsite_author: Rishi\n\nnav:\n  - Home: index.md\n  - About: about.md\n  - ML:\n      - Basics: ml/basics.md\n      - Models: ml/models.md\n  - AI:\n      - Concepts: ai/concepts.md\n      - Tools: ai/tools.md\n\ntheme:\n  name: material  # Recommended theme\n  palette:\n    primary: blue\n    accent: indigo\n  font:\n    text: Roboto\n    code: Roboto Mono\n\ndocs_dir: docs\nsite_dir: site\n</code></pre>"},{"location":"cheatsheet/#common-extensions","title":"\ud83e\udde9 Common Extensions","text":"<pre><code>markdown_extensions:\n  - toc:\n      permalink: true\n  - admonition\n  - codehilite:\n      guess_lang: false\n  - pymdownx.superfences\n  - pymdownx.details\n  - pymdownx.highlight\n  - pymdownx.inlinehilite\n  - pymdownx.emoji:\n      emoji_generator: !!python/name:pymdownx.emoji.to_svg\n</code></pre> <p>Note</p> <p>this is a note - admonition</p> <pre><code>Learn this\n    ```python\n    int a = 10\n    ```\n</code></pre> <p>==highlight== or <code>==highlight==</code></p> <p> </p>"},{"location":"cheatsheet/#title-my-class","title":"Title {.my-class}","text":""},{"location":"cheatsheet/#plugins","title":"\ud83d\ude80 Plugins","text":"<pre><code>plugins:\n  - search\n  - mkdocstrings  # for API docs (e.g., Python)\n  - git-revision-date\n</code></pre> <p>Install with: <code>pip install mkdocs-material mkdocstrings mkdocs-git-revision-date-plugin</code></p>"},{"location":"cheatsheet/#directory-structure","title":"\ud83d\udcc1 Directory Structure","text":"<pre><code>project/\n\u251c\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 index.md\n\u2502   \u251c\u2500\u2500 about.md\n\u2502   \u2514\u2500\u2500 ml/\n\u2502       \u2514\u2500\u2500 basics.md\n\u251c\u2500\u2500 mkdocs.yml\n</code></pre>"},{"location":"cheatsheet/#extra-options-for-material-theme","title":"\ud83d\uddbc\ufe0f Extra Options (for Material theme)","text":"<pre><code>extra:\n  social:\n    - icon: fontawesome/brands/github\n      link: https://github.com/yourusername\n</code></pre>"},{"location":"cheatsheet/#deployment-github-pages","title":"\ud83d\udce6 Deployment (GitHub Pages)","text":"<pre><code>pip install mkdocs ghp-import\nmkdocs build\nghp-import site\ngit push origin gh-pages\n</code></pre> <p>Or simpler with Material:</p> <pre><code>mkdocs gh-deploy\n</code></pre>"},{"location":"cheatsheet/#serve-locally","title":"\ud83c\udf10 Serve Locally","text":"<pre><code>mkdocs serve\n</code></pre>"},{"location":"ml-basics/","title":"What is Language Model?","text":"<ul> <li> <p>A language model is a machine learning model that aims to predict and generate plausible language. Autocomplete is a language model, for example.</p> </li> <li> <p>These models work by estimating the probability of a token or sequence of tokens occurring within a longer sequence of tokens. Consider the following sentence:</p> </li> </ul> <pre><code>When I hear rain on my roof, I _______ in my kitchen.\n</code></pre> <pre><code>int a = 10\nprint(a)\n</code></pre>"},{"location":"roadmap/","title":"Roadmap For AI Engineer by Tech Tim","text":""},{"location":"roadmap/#build","title":"Build","text":"<ol> <li>OpenAI/API</li> <li>Claude API</li> <li>Ollama - To run local model</li> <li>Langchain</li> <li>LangGraph</li> <li>Building some basic AI agents</li> <li>Vector DB</li> <li>Retrieval Augmented Generation</li> </ol>"},{"location":"roadmap/#ml-techniques","title":"ML Techniques","text":"<ol> <li>Regression</li> <li>Classification</li> <li> <p>Clustering</p> </li> <li> <p>Scikit-learn</p> </li> <li>Neural Network</li> <li>Basic Computer Vision</li> <li>Pytorch</li> <li>Tensorflow</li> </ol>"},{"location":"roadmap/#llm-and-ai-agents","title":"LLM and AI agents","text":"<ol> <li> <p>How LLM Works:</p> <ul> <li> <p>GPT</p> <ul> <li>Generative Pre-training Transformer</li> <li>Architecture</li> <li>LLM - what it does and what it doesn't do</li> <li>Black box</li> </ul> </li> </ul> </li> <li> <p>No code tools:</p> <ul> <li>crewAI, Langflow, n8n, VAPI, Livekit</li> </ul> </li> <li> <p>MCP Servers</p> </li> <li>AI Code editors</li> </ol> <p>Note</p> <p>Do some real-world projects like chatbot and SaaS</p>"},{"location":"vector-database/","title":"Vector DB","text":""},{"location":"vector-database/#why","title":"Why","text":"<ul> <li>Over 80% of data is unstructured on the internet like images, videos and audio.</li> <li>If we need to store it in relational database, we have to give some context like tags, name, category and so on.</li> </ul>"},{"location":"vector-database/#what","title":"What","text":"<ul> <li> <p>A vector database indexes and stores vector embeddings for fast retrieval and similarity search.</p> </li> <li> <p>unstructured_data -&gt; Model(ml) -&gt; vector embedding</p> </li> <li> <p>A vector embedding is a list of numbers which represents the data in different way.</p> </li> <li> <p>We can represent a word, sentence and a image to get numerical number.</p> </li> <li> <p>we can use this number to find euclidean distance(distance between two objects) to find similarity search.</p> </li> <li> <p>d=((x2-x1)^2 +(y2-y1)^2)^1/2</p> </li> <li> <p>So if we need to find difference between thousands of embeddings is slow if done on the fly.</p> </li> <li> <p>So we need to vector indexing.</p> </li> </ul>"},{"location":"vector-database/#vector-indexing","title":"Vector Indexing","text":"<ul> <li>Index is same as index in relational db. It is a data structure which sorts the field of increasing performance of searching capabilities.</li> </ul>"},{"location":"vector-database/#use-cases","title":"Use cases","text":"<ol> <li>Long-term memory for LLMs.</li> <li>Semantic search: Search based on the meaning or context.</li> <li>Similarity search for text, images, audio or video data.</li> <li>Recommendation engine - suggestion similar to past purchases.</li> </ol>"},{"location":"vector-database/#some-vector-databases","title":"Some vector Databases","text":"<ul> <li>Pinecone</li> <li>Weaviate</li> <li>Chroma</li> <li>Redis</li> <li>Qdrant</li> <li>Milvus</li> <li>Vespa</li> </ul>"},{"location":"vector-database/#fireship-video","title":"Fireship video","text":"<ul> <li>A vector is a array of numbers. Embeddings are grouped together based on semantic data.</li> <li>Vector db is used to store vector embeddings</li> </ul>"}]}